{"version":3,"sources":["webpack:///./src/pages/php-fpm.js"],"names":["Comment","children","className","ConfigLine","Spacer","PhpFpm","useState","average_ram","setAverageRam","total_ram","setTotalRam","reserved_ram","setReservedRam","available_ram","actual_php_fpm_max_children","Math","round","php_fpm_max_children","floor","php_fpm_start_servers","php_fpm_max_spare_servers","title","type","min","step","value","onChange","e","parseFloat","target"],"mappings":"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","file":"component---src-pages-php-fpm-js-0bcf9534661e07e554a9.js","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from '../components/seo.js';\n\nconst Comment = ({ children }) => <div\n\tclassName=\"text-gray-600 font-mono whitespace-no-wrap\"\n\tchildren={ children }\n/>;\n\nconst ConfigLine = ({ children }) => <div\n\tclassName=\"text-gray-900 font-mono whitespace-no-wrap\"\n\tchildren={ children }\n/>;\n\nconst Spacer = () => <div className=\"my-4\" />;\n\nexport default function PhpFpm() {\n\tconst [average_ram, setAverageRam] = useState(60);\n\tconst [total_ram, setTotalRam] = useState(8);\n\tconst [reserved_ram, setReservedRam] = useState(2);\n\t\n\tconst available_ram = total_ram - reserved_ram;\n\t\n\tconst actual_php_fpm_max_children = Math.round((1024 * available_ram) / average_ram);\n\tconst php_fpm_max_children = Math.floor(actual_php_fpm_max_children / 5) * 5;\n\tconst php_fpm_start_servers = Math.floor(php_fpm_max_children / 2 / 5) * 5;\n\tconst php_fpm_max_spare_servers = Math.floor((php_fpm_max_children - (php_fpm_start_servers / 2)) / 5) * 5;\n\t\n\treturn (\n\t\t<Layout>\n\t\t\t\n\t\t\t<SEO title=\"Tuning dynamic php-fpm settings - Chris Morrell\" />\n\t\t\t\n\t\t\t<h1 className=\"text-5xl lg:text-6xl font-bold font-slant text-gray-800\">\n\t\t\t\tTuning dynamic php-fpm settings\n\t\t\t</h1>\n\t\t\t\n\t\t\t<p className=\"text-xl lg:text-2xl leading-normal my-4\">\n\t\t\t\tThis is as much a note to self than anything else. Each time I need to\n\t\t\t\tchange my <code>php-fpm</code> settings, I need to Google “php-fpm dynamic tuning”\n\t\t\t\tor something similar. With a little luck, next time I Google it, I'll find\n\t\t\t\tthis page :)\n\t\t\t</p>\n\t\t\t\n\t\t\t<h2 className=\"text-xl lg:text-3xl font-bold font-slant my-4\">\n\t\t\t\tStep one: Figuring out how much memory your typical PHP process uses\n\t\t\t</h2>\n\t\t\t\n\t\t\t<p className=\"text-xl leading-normal my-4\">\n\t\t\t\tFirst we need to figure out how much memory a typical PHP process uses. This will\n\t\t\t\tinform the total number of processes that we’re going to run. We can do that with\n\t\t\t\tthis nifty command:\n\t\t\t</p>\n\t\t\t\n\t\t\t<p className=\"my-4\">\n\t\t\t\t<code children={ `ps --no-headers -o \"rss,cmd\" -C php-fpm | awk '{ sum+=$1 } END { printf (\"%d%s\\\\n\", sum/NR/1024,\"M\") }'` } />\n\t\t\t</p>\n\t\t\t\n\t\t\t<p className=\"text-xl leading-normal my-4\">\n\t\t\t\tThe <code>ps</code> bit will show all the current running <code>php-fpm</code> processes\n\t\t\t\t(including their memory consumption), and then the <code>awk</code> bit adds them all up\n\t\t\t\tand pretty-prints the value in MB.\n\t\t\t</p>\n\t\t\t\n\t\t\t<p className=\"text-xl leading-normal my-4\">\n\t\t\t\tIn the end, this will print out a nice number for us. Something in\n\t\t\t\tthe <strong>40–60 MB range</strong> is to be expected with a typical Laravel app.\n\t\t\t</p>\n\t\t\t\n\t\t\t<h2 className=\"text-xl lg:text-3xl font-bold font-slant my-4\">\n\t\t\t\tStep two: Deciding how much memory to give to PHP\n\t\t\t</h2>\n\t\t\t\n\t\t\t<p className=\"text-xl leading-normal my-4\">\n\t\t\t\tThis one is entirely up to you. You want to leave some memory for the other\n\t\t\t\tprocesses on your server. If the server is dedicated to running PHP only,\n\t\t\t\tyou can dedicate most of your RAM to the php-fpm processes. On the other hand,\n\t\t\t\tif you’re also running a database server, redis, etc, you’re going to need to\n\t\t\t\tleave space for those to run.\n\t\t\t</p>\n\t\t\t\n\t\t\t<p className=\"text-xl leading-normal my-4\">\n\t\t\t\tKeep in mind that if you have queue workers running on your server, they'll\n\t\t\t\teach take up about the same amount of RAM as your other PHP processes. So,\n\t\t\t\tfor example, if you have 10 queue workers running on your server and your \n\t\t\t\tprocesses take about 50 MB or RAM, that's another 500 MB of RAM that you need\n\t\t\t\tto set aside.\n\t\t\t</p>\n\t\t\t\n\t\t\t<p className=\"text-xl leading-normal my-4\">\n\t\t\t\tIn my most recent case, I needed to account for the fact that sometimes we\n\t\t\t\thave other processes running that consume about 1 GB of RAM. To play it safe,\n\t\t\t\tI decided to reserve 2 GB of RAM for “system and other” processes. On a instance\n\t\t\t\twith 8 GB of RAM, <strong>that leaves us with 6 GB for PHP</strong>.\n\t\t\t</p>\n\t\t\t\n\t\t\t<h2 className=\"text-xl lg:text-3xl font-bold font-slant my-4\">\n\t\t\t\tNow, let's let the computers do math for us:\n\t\t\t</h2>\n\t\t\t\n\t\t\t<div className=\"my-4 border rounded p-4\">\n\t\t\t\t<div className=\"lg:flex -mx-2\">\n\t\t\t\t\t<div className=\"mb-2 flex-1 flex flex-col justify-center mx-2 border rounded\">\n\t\t\t\t\t\t<label className=\"font-bold mb-1 bg-gray-100 text-center p-2\">\n\t\t\t\t\t\t\tTotal RAM:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"flex justify-center items-baseline p-2 -mx-1\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"border border-gray-300 p-2 rounded focus:border-gray-500 mx-1\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tstep=\".5\"\n\t\t\t\t\t\t\t\tvalue={ total_ram }\n\t\t\t\t\t\t\t\tonChange={ e => setTotalRam(parseFloat(e.target.value)) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"mx-1 font-bold\">\n\t\t\t\t\t\t\tGB\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-2 flex-1 flex flex-col justify-center mx-2 border rounded\">\n\t\t\t\t\t\t<label className=\"font-bold mb-1 bg-gray-100 text-center p-2\">\n\t\t\t\t\t\t\tReserved RAM:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"flex justify-center items-baseline p-2 -mx-1\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"border border-gray-300 p-2 rounded focus:border-gray-500 mx-1\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tstep=\".5\"\n\t\t\t\t\t\t\t\tvalue={ reserved_ram }\n\t\t\t\t\t\t\t\tonChange={ e => setReservedRam(parseFloat(e.target.value)) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"mx-1 font-bold\">\n\t\t\t\t\t\t\tGB\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-2 flex-1 flex flex-col justify-center mx-2 border rounded\">\n\t\t\t\t\t\t<label className=\"font-bold mb-1 bg-gray-100 text-center p-2\">\n\t\t\t\t\t\t\tAverage php-fpm process:\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<div className=\"flex justify-center items-baseline p-2 -mx-1\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"border border-gray-300 p-2 rounded focus:border-gray-500 mx-1\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tstep=\".5\"\n\t\t\t\t\t\t\t\tvalue={ average_ram }\n\t\t\t\t\t\t\t\tonChange={ e => setAverageRam(parseFloat(e.target.value)) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span className=\"mx-1 font-bold\">\n\t\t\t\t\t\t\tMB\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"pt-2\">\n\t\t\t\t\t<h3 className=\"font-bold mb-1\">\n\t\t\t\t\t\tSuggested Settings:\n\t\t\t\t\t</h3>\n\t\t\t\t\t<div className=\"bg-gray-100 p-2 rounded mt-4 border text-sm overflow-x-auto w-full\">\n\t\t\t\t\t\t<Comment>; Run php-fpm in \"dynamic\" mode</Comment>\n\t\t\t\t\t\t<ConfigLine>pm = <strong>dynamic</strong></ConfigLine>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Comment>; Set max_children to ([total RAM - reserved RAM]) / [average php-fpm process])</Comment>\n\t\t\t\t\t\t<Comment>; Most recently: (1024 * ({ total_ram } - { reserved_ram })) / { average_ram } = { actual_php_fpm_max_children }</Comment>\n\t\t\t\t\t\t<ConfigLine>pm.max_children = <strong>{ php_fpm_max_children }</strong></ConfigLine>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Comment>; When php-fpm starts, have this many processes waiting for requests. Set to 50% of</Comment>\n\t\t\t\t\t\t<Comment>; max on a server that's mostly responsible for running PHP processes</Comment>\n\t\t\t\t\t\t<ConfigLine>pm.start_servers = <strong>{ php_fpm_start_servers }</strong></ConfigLine>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Comment>; Minimum number spare processes php-fpm will create. In the case of a</Comment>\n\t\t\t\t\t\t<Comment>; server dedicated to running PHP, we'll set this to the same as start_servers</Comment>\n\t\t\t\t\t\t<ConfigLine>pm.min_spare_servers = <strong>{ php_fpm_start_servers }</strong></ConfigLine>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Comment>; Maximum number spare processes php-fpm will create. If more than this</Comment>\n\t\t\t\t\t\t<Comment>; many processes are idle, some will be killed.</Comment>\n\t\t\t\t\t\t<ConfigLine>pm.max_spare_servers = <strong>{ php_fpm_max_spare_servers }</strong></ConfigLine>\n\t\t\t\t\t\t<Spacer />\n\t\t\t\t\t\t<Comment>; After this many requests, a php-fpm process will respawn. This is useful</Comment>\n\t\t\t\t\t\t<Comment>; to guard against memory leaks, but causes a small performance hit. Set to</Comment>\n\t\t\t\t\t\t<Comment>; a high number (or 0) if you're confident that your app does not have any</Comment>\n\t\t\t\t\t\t<Comment>; memory leaks (and that you're not using any 3rd-party libraries that have</Comment>\n\t\t\t\t\t\t<Comment>; memory leaks), or set to a lower number if you're aware of a leak.</Comment>\n\t\t\t\t\t\t<ConfigLine>pm.max_requests = <strong>500</strong></ConfigLine>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t\t</Layout>\n\t);\n}\n"],"sourceRoot":""}